substitutions:
  _RUNTIME: nodejs18
  _SERVICE_NAME: hello-world
  _REGION: us-central1
  _ENTRY_POINT: noteApp
  _REDIS_INSTANCE_NAME: tappz-redis
  _COMMIT_SHA: da39a3ee5e6b4b0d3255bfef95601890afd80709

steps:
  # Build and push Cloud Run service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/tappz:${_COMMIT_SHA}', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tappz:${_COMMIT_SHA}']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'tappz'
      - '--image=gcr.io/$PROJECT_ID/tappz:${_COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'

# Fetch Redis host and port
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'redis'
      - 'instances'
      - 'describe'
      - '${_REDIS_INSTANCE_NAME}'  # Replace with your Redis instance name
      - '--region=${_REGION}'
      - '--format=value(host,port)'

  # Export Redis URL as environment variable
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - '-c'
      - |
        REDIS_HOST_PORT=$(gcloud redis instances describe YOUR_REDIS_INSTANCE_NAME --region=$_REGION --format='value(host,port)')
        REDIS_HOST=$(echo $REDIS_HOST_PORT | cut -d':' -f1)
        REDIS_PORT=$(echo $REDIS_HOST_PORT | cut -d':' -f2)
        export REDIS_URL="redis://$REDIS_HOST:$REDIS_PORT"
        echo "REDIS_URL=$REDIS_URL" >> $BASH_ENV

  # Install dependencies and build for Cloud Function
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']

  # Deploy Cloud Function
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'functions'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--gen2'
      - '--runtime=${_RUNTIME}'
      - '--trigger-http'
      - '--allow-unauthenticated'
      - '--region=${_REGION}'
      - '--entry-point=${_ENTRY_POINT}'
      - '--update-env-vars=REDIS_URL=$REDIS_URL'
      - '--memory=128Mi'

  # Deploy API Gateway
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'api-gateway'
      - 'api-configs'
      - 'create'
      - 'my-api-config'
      - '--api=my-api'
      - '--openapi-spec=./api-spec.yaml'
      - '--project=$PROJECT_ID'
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'api-gateway'
      - 'gateways'
      - 'update'
      - 'my-gateway'
      - '--api=my-api'
      - '--api-config=my-api-config'
      - '--location=us-central1'
      - '--project=$PROJECT_ID'

  # Update Load Balancer backend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'compute'
      - 'backend-services'
      - 'update'
      - 'my-backend-service'
      - '--global'
      - '--network-endpoint-group=my-cloud-run-neg'
      - '--network-endpoint-group-region=us-central1'

images:
  - 'gcr.io/$PROJECT_ID/tappz:${_COMMIT_SHA}'
