substitutions:
  _RUNTIME: nodejs18
  _SERVICE_NAME: hello-world
  _REGION: us-central1
  _ENTRY_POINT: noteApp

steps:
# Build and push Cloud Run service
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/tappz:$COMMIT_SHA', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/tappz:$COMMIT_SHA']

# Deploy to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - 'tappz'
    - '--image=gcr.io/$PROJECT_ID/tappz:$COMMIT_SHA'
    - '--region=us-central1'
    - '--platform=managed'

# Build and deploy Cloud Function
- name: 'gcr.io/cloud-builders/npm'
  args:
    - 'install'
    - '&&'
    - 'npm'
    - 'run'
    - 'build'

- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  args:
    - gcloud
    - functions
    - deploy
    - ${_SERVICE_NAME}
    - --gen2
    - --runtime=${_RUNTIME}
    - --trigger-http
    - --allow-unauthenticated
    - --region=${_REGION}
    - --entry-point=${_ENTRY_POINT}
    - --memory=128Mi

# Deploy API Gateway (Assuming the spec file is properly configured)
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'api-gateway'
    - 'api-configs'
    - 'create'
    - 'my-api-config'
    - '--api=my-api'
    - '--openapi-spec=./api-spec.yaml'
    - '--project=$PROJECT_ID'

- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'api-gateway'
    - 'gateways'
    - 'update'
    - 'my-gateway'
    - '--api=my-api'
    - '--api-config=my-api-config'
    - '--location=us-central1'
    - '--project=$PROJECT_ID'

# Update Load Balancer backend (Assuming Terraform manages this)
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'compute'
    - 'backend-services'
    - 'update'
    - 'my-backend-service'
    - '--global'
    - '--network-endpoint-group=my-cloud-run-neg'
    - '--network-endpoint-group-region=us-central1'

images:
  - 'gcr.io/$PROJECT_ID/tappz:$COMMIT_SHA'


# steps:
#   - name: node
#     entrypoint: "bash"
#     args:
#       - "-c"
#       - |
#         npm install && npm run build

#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     args:
#       - gcloud
#       - functions
#       - deploy
#       - ${_SERVICE_NAME}
#       - --gen2
#       - --runtime=${_RUNTIME}
#       - --trigger-http
#       - --allow-unauthenticated
#       - --region=${_REGION}
#       - --entry-point=${_ENTRY_POINT}
#       - --memory=128Mi